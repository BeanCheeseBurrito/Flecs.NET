// NodeBuilder/T6.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/RoutineBuilder.cs
using System;
using Flecs.NET.Core.BindingContext;

namespace Flecs.NET.Core;

public unsafe partial struct RoutineBuilder
{
    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(Ecs.IterFieldCallback<T0, T1, T2, T3, T4, T5> callback) 
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.IterFieldCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(Ecs.IterSpanCallback<T0, T1, T2, T3, T4, T5> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.IterSpanCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(Ecs.IterPointerCallback<T0, T1, T2, T3, T4, T5> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.IterPointerCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(delegate*<Iter, Field<T0>, Field<T1>, Field<T2>, Field<T3>, Field<T4>, Field<T5>, void> callback) 
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.IterFieldCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(delegate*<Iter, Span<T0>, Span<T1>, Span<T2>, Span<T3>, Span<T4>, Span<T5>, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.IterSpanCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Iter<T0, T1, T2, T3, T4, T5>(delegate*<Iter, T0*, T1*, T2*, T3*, T4*, T5*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.IterPointerCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachRefCallback<T0, T1, T2, T3, T4, T5> callback) 
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachRefCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachEntityRefCallback<T0, T1, T2, T3, T4, T5> callback) 
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachEntityRefCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachIterRefCallback<T0, T1, T2, T3, T4, T5> callback) 
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachIterRefCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, void> callback) 
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachRefCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, void> callback) 
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachEntityRefCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, void> callback) 
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachIterRefCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachPointerCallback<T0, T1, T2, T3, T4, T5> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachPointerCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachEntityPointerCallback<T0, T1, T2, T3, T4, T5> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachEntityPointerCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(Ecs.EachIterPointerCallback<T0, T1, T2, T3, T4, T5> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback(callback, Pointers<T0, T1, T2, T3, T4, T5>.EachIterPointerCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<T0*, T1*, T2*, T3*, T4*, T5*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachPointerCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachEntityPointerCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="Routine"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam>
    public Routine Each<T0, T1, T2, T3, T4, T5>(delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged
    {
        return SetCallback((IntPtr)callback, Pointers<T0, T1, T2, T3, T4, T5>.EachIterPointerCallbackPointer).Build();
    }
}