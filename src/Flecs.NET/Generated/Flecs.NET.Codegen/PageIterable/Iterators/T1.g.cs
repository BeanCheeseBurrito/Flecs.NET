// Iterators/T1.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/PageIterable.cs
using System;

namespace Flecs.NET.Core;

public unsafe partial struct PageIterable
{
    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(Ecs.IterFieldCallback<T0> callback) 
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(Ecs.IterSpanCallback<T0> callback) where T0 : unmanaged
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(Ecs.IterPointerCallback<T0> callback) where T0 : unmanaged
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(delegate*<Iter, Field<T0>, void> callback) 
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(delegate*<Iter, Span<T0>, void> callback) where T0 : unmanaged
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Iter<T0>(delegate*<Iter, T0*, void> callback) where T0 : unmanaged
    {
        Invoker.Iter<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachRefCallback<T0> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachEntityRefCallback<T0> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachIterRefCallback<T0> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<ref T0, void> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<Entity, ref T0, void> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<Iter, int, ref T0, void> callback) 
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachPointerCallback<T0> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachEntityPointerCallback<T0> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(Ecs.EachIterPointerCallback<T0> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<T0*, void> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<Entity, T0*, void> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public void Each<T0>(delegate*<Iter, int, T0*, void> callback) where T0 : unmanaged
    {
        Invoker.Each<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindRefCallback<T0> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindEntityRefCallback<T0> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindIterRefCallback<T0> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<ref T0, bool> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<Entity, ref T0, bool> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<Iter, int, ref T0, bool> callback) 
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindPointerCallback<T0> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindEntityPointerCallback<T0> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(Ecs.FindIterPointerCallback<T0> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<T0*, bool> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<Entity, T0*, bool> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="PageIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public Entity Find<T0>(delegate*<Iter, int, T0*, bool> callback) where T0 : unmanaged
    {
        return Invoker.Find<PageIterable, T0>(ref this, callback);
    }
}