// Builders/T2.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/World.cs
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member

namespace Flecs.NET.Core;

public unsafe partial struct World
{
    public AlertBuilder AlertBuilder<T0, T1>()
    {
        return new AlertBuilder(Handle).With<T0>().With<T1>();
    }

    public AlertBuilder AlertBuilder<T0, T1>(string name)
    {
        return new AlertBuilder(Handle, name).With<T0>().With<T1>();
    }

    public AlertBuilder AlertBuilder<T0, T1>(ulong entity)
    {
        return new AlertBuilder(Handle, entity).With<T0>().With<T1>();
    }

    public Alert Alert<T0, T1>()
    {
        return AlertBuilder<T0, T1>().Build();
    }

    public Alert Alert<T0, T1>(string name)
    {
        return AlertBuilder<T0, T1>(name).Build();
    }

    public Alert Alert<T0, T1>(ulong entity)
    {
        return AlertBuilder<T0, T1>(entity).Build();
    }

    public QueryBuilder QueryBuilder<T0, T1>()
    {
        return new QueryBuilder(Handle).With<T0>().With<T1>();
    }

    public QueryBuilder QueryBuilder<T0, T1>(string name)
    {
        return new QueryBuilder(Handle, name).With<T0>().With<T1>();
    }

    public QueryBuilder QueryBuilder<T0, T1>(ulong entity)
    {
        return new QueryBuilder(Handle, entity).With<T0>().With<T1>();
    }

    public Query Query<T0, T1>()
    {
        return QueryBuilder<T0, T1>().Build();
    }

    public Query Query<T0, T1>(string name)
    {
        return QueryBuilder<T0, T1>(name).Build();
    }

    public Query Query<T0, T1>(ulong entity)
    {
        return QueryBuilder<T0, T1>(entity).Build();
    }

    public RoutineBuilder Routine<T0, T1>()
    {
        return new RoutineBuilder(Handle).With<T0>().With<T1>();
    }

    public RoutineBuilder Routine<T0, T1>(string name)
    {
        return new RoutineBuilder(Handle, name).With<T0>().With<T1>();
    }

    public ObserverBuilder Observer<T0, T1>()
    {
        return new ObserverBuilder(Handle).With<T0>().With<T1>();
    }

    public ObserverBuilder Observer<T0, T1>(string name)
    {
        return new ObserverBuilder(Handle, name).With<T0>().With<T1>();
    }
}

#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member