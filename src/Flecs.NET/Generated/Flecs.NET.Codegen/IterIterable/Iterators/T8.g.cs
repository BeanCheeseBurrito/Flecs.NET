// Iterators/T8.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/IterIterable.cs
using System;

namespace Flecs.NET.Core;

public unsafe partial struct IterIterable
{
    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.IterFieldCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.IterSpanCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.IterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, Field<T0>, Field<T1>, Field<T2>, Field<T3>, Field<T4>, Field<T5>, Field<T6>, Field<T7>, void> callback) 
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, Span<T0>, Span<T1>, Span<T2>, Span<T3>, Span<T4>, Span<T5>, Span<T6>, Span<T7>, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Iter<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Iter<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, void> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, void> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, void> callback) 
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.EachIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public void Each<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, void> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        Invoker.Each<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, bool> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, bool> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, bool> callback) 
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, bool> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, bool> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }

    /// <summary>
    ///     Iterates the <see cref="IterIterable"/> using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam>
    public Entity Find<T0, T1, T2, T3, T4, T5, T6, T7>(delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, bool> callback) where T0 : unmanaged where T1 : unmanaged where T2 : unmanaged where T3 : unmanaged where T4 : unmanaged where T5 : unmanaged where T6 : unmanaged where T7 : unmanaged
    {
        return Invoker.Find<IterIterable, T0, T1, T2, T3, T4, T5, T6, T7>(ref this, callback);
    }
}