// /_/src/Flecs.NET/Generated/SystemBuilder/SystemBuilder.NodeBuilder/T0.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/SystemBuilder.cs
using System;
using Flecs.NET.Core.BindingContext;
using Flecs.NET.Utilities;

using static Flecs.NET.Bindings.flecs;

namespace Flecs.NET.Core;

public unsafe partial struct SystemBuilder
{
    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Run(Ecs.RunCallback callback)
    {
        return SetRun(callback, &Functions.RunCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Run(delegate*<Iter, void> callback)
    {
        return SetRun(callback, &Functions.RunCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public ref SystemBuilder Run(Ecs.RunDelegateCallback callback)
    {
        return ref SetRun(callback, &Functions.RunDelegateCallbackDelegate);
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public ref SystemBuilder Run(delegate*<Iter, Action<Iter>, void> callback)
    {
        return ref SetRun(callback, &Functions.RunDelegateCallbackPointer);
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public ref SystemBuilder Run(Ecs.RunPointerCallback callback)
    {
        return ref SetRun(callback, &Functions.RunPointerCallbackDelegate);
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public ref SystemBuilder Run(delegate*<Iter, delegate*<Iter, void>, void> callback)
    {
        return ref SetRun(callback, &Functions.RunPointerCallbackPointer);
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Iter(Ecs.IterCallback callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertSparseTypes(World, true);
        return SetCallback(callback, &Functions.IterCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Iter(delegate*<Iter, void> callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertSparseTypes(World, true);
        return SetCallback(callback, &Functions.IterCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Each(Ecs.EachEntityCallback callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        return SetCallback(callback, &Functions.EachEntityCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Each(delegate*<Entity, void> callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        return SetCallback(callback, &Functions.EachEntityCallbackPointer).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Each(Ecs.EachIterCallback callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        return SetCallback(callback, &Functions.EachIterCallbackDelegate).Build();
    }

    /// <summary>
    ///     Creates <see cref="System"/> with the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public System_ Each(delegate*<Iter, int, void> callback)
    {
        Types<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.AssertReferenceTypes(true);
        return SetCallback(callback, &Functions.EachIterCallbackPointer).Build();
    }
}