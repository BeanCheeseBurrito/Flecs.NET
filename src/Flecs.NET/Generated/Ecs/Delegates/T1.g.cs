// /_/src/Flecs.NET/Generated/Ecs/Delegates/T1.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Ecs.cs
using System;

namespace Flecs.NET.Core;

public static unsafe partial class Ecs
{
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/> and 1 <see cref="Field{T}"/> arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void IterFieldCallback<T0>(Iter it, Field<T0> t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/> and 1 <see cref="Span{T}"/> arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void IterSpanCallback<T0>(Iter it, Span<T0> t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/> and 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void IterPointerCallback<T0>(Iter it, T0* t0);
    
    /// <summary>
    ///     Function signature that takes 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachRefCallback<T0>(ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Entity"/> and 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachEntityRefCallback<T0>(Entity entity, ref T0 t0);

    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/>, an <see cref="int"/>, and 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachIterRefCallback<T0>(Iter it, int i, ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachPointerCallback<T0>(T0* t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Entity"/> and 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachEntityPointerCallback<T0>(Entity entity, T0* t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/>, an <see cref="int"/>, and 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void EachIterPointerCallback<T0>(Iter it, int i, T0* t0);
    
    /// <summary>
    ///     Function signature that takes 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindRefCallback<T0>(ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Entity"/> and 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindEntityRefCallback<T0>(Entity entity, ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/>, an <see cref="int"/>, and 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindIterRefCallback<T0>(Iter it, int i, ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindPointerCallback<T0>(T0* t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Entity"/> and 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindEntityPointerCallback<T0>(Entity entity, T0* t0);
    
    /// <summary>
    ///     Function signature that takes an <see cref="Iter"/>, an <see cref="int"/>, and 1 T* arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate bool FindIterPointerCallback<T0>(Iter it, int i, T0* t0);
    
    /// <summary>
    ///     Function signature that takes 1 ref readonly T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void ReadRefCallback<T0>(ref readonly T0 t0);
    
    /// <summary>
    ///     Function signature that takes 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void WriteRefCallback<T0>(ref T0 t0);
    
    /// <summary>
    ///     Function signature that takes 1 ref T arguments.
    /// </summary>
    /// <typeparam name="T0">The T0 component type.</typeparam>
    public delegate void InsertRefCallback<T0>(ref T0 t0);
}