// /_/src/Flecs.NET/Generated/IIterable/IIterable/T1.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/IIterable.cs
using System;

using static Flecs.NET.Bindings.flecs;

namespace Flecs.NET.Core;

/// <summary>
///     Interface for iterable objects.
/// </summary>
/// <typeparam name="T0">The T0 component type.</typeparam>
public unsafe interface IIterable<T0> : IIterableBase
{
    /// <inheritdoc cref="IIterable.Page(int, int)"/>
    public PageIterable<T0> Page(int offset, int limit);
    
    /// <inheritdoc cref="IIterable.Worker(int, int)"/>
    public WorkerIterable<T0> Worker(int index, int count);
    
    /// <inheritdoc cref="IIterable.Iter(Flecs.NET.Core.World)"/>
    public IterIterable<T0> Iter(World world = default);
    
    /// <inheritdoc cref="IIterable.Iter(Flecs.NET.Core.Iter)"/>
    public IterIterable<T0> Iter(Iter it);
    
    /// <inheritdoc cref="IIterable.Iter(Flecs.NET.Core.Entity)"/>
    public IterIterable<T0> Iter(Entity entity);

    /// <inheritdoc cref="IIterable.Count()"/>
    public int Count();
    
    /// <inheritdoc cref="IIterable.IsTrue()"/>
    public bool IsTrue();
    
    /// <inheritdoc cref="IIterable.First()"/>
    public Entity First();
    
    /// <inheritdoc cref="IIterable.SetVar(int, ulong)"/>
    public IterIterable<T0> SetVar(int varId, ulong value);
    
    /// <inheritdoc cref="IIterable.SetVar(string, ulong)"/>
    public IterIterable<T0> SetVar(string name, ulong value);
    
    /// <inheritdoc cref="IIterable.SetVar(string, ecs_table_t*)"/>
    public IterIterable<T0> SetVar(string name, ecs_table_t* value);
    
    /// <inheritdoc cref="IIterable.SetVar(string, ecs_table_range_t)"/>
    public IterIterable<T0> SetVar(string name, ecs_table_range_t value);
    
    /// <inheritdoc cref="IIterable.SetVar(string, Table)"/>
    public IterIterable<T0> SetVar(string name, Table value);
    
    /// <inheritdoc cref="IIterable.SetGroup(ulong)"/>
    public IterIterable<T0> SetGroup(ulong groupId);
    
    /// <inheritdoc cref="IIterable.SetGroup{T}()"/>
    public IterIterable<T0> SetGroup<T>();
    
    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(Ecs.RunCallback callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(delegate*<Iter, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(Ecs.RunDelegateCallback callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(delegate*<Iter, Action<Iter>, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(Ecs.RunPointerCallback callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Run callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Run(delegate*<Iter, delegate*<Iter, void>, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(Ecs.IterFieldCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(delegate*<Iter, Field<T0>, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(Ecs.IterSpanCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(delegate*<Iter, Span<T0>, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(Ecs.IterPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Iter callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Iter(delegate*<Iter, T0*, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachEntityRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachIterRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<ref T0, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<Entity, ref T0, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<Iter, int, ref T0, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachEntityPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(Ecs.EachIterPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<T0*, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<Entity, T0*, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Each callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public void Each(delegate*<Iter, int, T0*, void> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindEntityRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindIterRefCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<ref T0, bool> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<Entity, ref T0, bool> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<Iter, int, ref T0, bool> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindEntityPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(Ecs.FindIterPointerCallback<T0> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<T0*, bool> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<Entity, T0*, bool> callback);

    /// <summary>
    ///     Iterates the iterable object using the provided .Find callback.
    /// </summary>
    /// <param name="callback">The callback.</param>
    public Entity Find(delegate*<Iter, int, T0*, bool> callback);
}