// /_/src/Flecs.NET/Generated/Invoker/Iter/T2.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct IterFieldCallbackDelegate<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterFieldCallback<T0, T1> invoke = (Ecs.IterFieldCallback<T0, T1>)callback;
        invoke(it, it.GetField<T0>(0), it.GetField<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterFieldCallbackDelegate<T0, T1>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterFieldCallbackPointer<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, Field<T0>, Field<T1>, void> invoke = (delegate*<Iter, Field<T0>, Field<T1>, void>)callback;
        invoke(it, it.GetField<T0>(0), it.GetField<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterFieldCallbackPointer<T0, T1>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterSpanCallbackDelegate<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterSpanCallback<T0, T1> invoke = (Ecs.IterSpanCallback<T0, T1>)callback;
        invoke(it, it.GetSpan<T0>(0), it.GetSpan<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterSpanCallbackDelegate<T0, T1>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterSpanCallbackPointer<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, Span<T0>, Span<T1>, void> invoke = (delegate*<Iter, Span<T0>, Span<T1>, void>)callback;
        invoke(it, it.GetSpan<T0>(0), it.GetSpan<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterSpanCallbackPointer<T0, T1>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterPointerCallbackDelegate<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterPointerCallback<T0, T1> invoke = (Ecs.IterPointerCallback<T0, T1>)callback;
        invoke(it, it.GetPointer<T0>(0), it.GetPointer<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterPointerCallbackDelegate<T0, T1>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterPointerCallbackPointer<T0, T1> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, T0*, T1*, void> invoke = (delegate*<Iter, T0*, T1*, void>)callback;
        invoke(it, it.GetPointer<T0>(0), it.GetPointer<T1>(1));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Iter<WorkerIterable, IterPointerCallbackPointer<T0, T1>>(ref state.Worker, state.Callback);
    }
}