// /_/src/Flecs.NET/Generated/Invoker/Iter/T12.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct IterFieldCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterFieldCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> invoke = (Ecs.IterFieldCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>)callback;
        invoke(it, it.GetField<T0>(0), it.GetField<T1>(1), it.GetField<T2>(2), it.GetField<T3>(3), it.GetField<T4>(4), it.GetField<T5>(5), it.GetField<T6>(6), it.GetField<T7>(7), it.GetField<T8>(8), it.GetField<T9>(9), it.GetField<T10>(10), it.GetField<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterFieldCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterFieldCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, Field<T0>, Field<T1>, Field<T2>, Field<T3>, Field<T4>, Field<T5>, Field<T6>, Field<T7>, Field<T8>, Field<T9>, Field<T10>, Field<T11>, void> invoke = (delegate*<Iter, Field<T0>, Field<T1>, Field<T2>, Field<T3>, Field<T4>, Field<T5>, Field<T6>, Field<T7>, Field<T8>, Field<T9>, Field<T10>, Field<T11>, void>)callback;
        invoke(it, it.GetField<T0>(0), it.GetField<T1>(1), it.GetField<T2>(2), it.GetField<T3>(3), it.GetField<T4>(4), it.GetField<T5>(5), it.GetField<T6>(6), it.GetField<T7>(7), it.GetField<T8>(8), it.GetField<T9>(9), it.GetField<T10>(10), it.GetField<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterFieldCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterSpanCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterSpanCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> invoke = (Ecs.IterSpanCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>)callback;
        invoke(it, it.GetSpan<T0>(0), it.GetSpan<T1>(1), it.GetSpan<T2>(2), it.GetSpan<T3>(3), it.GetSpan<T4>(4), it.GetSpan<T5>(5), it.GetSpan<T6>(6), it.GetSpan<T7>(7), it.GetSpan<T8>(8), it.GetSpan<T9>(9), it.GetSpan<T10>(10), it.GetSpan<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterSpanCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterSpanCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, Span<T0>, Span<T1>, Span<T2>, Span<T3>, Span<T4>, Span<T5>, Span<T6>, Span<T7>, Span<T8>, Span<T9>, Span<T10>, Span<T11>, void> invoke = (delegate*<Iter, Span<T0>, Span<T1>, Span<T2>, Span<T3>, Span<T4>, Span<T5>, Span<T6>, Span<T7>, Span<T8>, Span<T9>, Span<T10>, Span<T11>, void>)callback;
        invoke(it, it.GetSpan<T0>(0), it.GetSpan<T1>(1), it.GetSpan<T2>(2), it.GetSpan<T3>(3), it.GetSpan<T4>(4), it.GetSpan<T5>(5), it.GetSpan<T6>(6), it.GetSpan<T7>(7), it.GetSpan<T8>(8), it.GetSpan<T9>(9), it.GetSpan<T10>(10), it.GetSpan<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterSpanCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterPointerCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.IterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> invoke = (Ecs.IterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>)callback;
        invoke(it, it.GetPointer<T0>(0), it.GetPointer<T1>(1), it.GetPointer<T2>(2), it.GetPointer<T3>(3), it.GetPointer<T4>(4), it.GetPointer<T5>(5), it.GetPointer<T6>(6), it.GetPointer<T7>(7), it.GetPointer<T8>(8), it.GetPointer<T9>(9), it.GetPointer<T10>(10), it.GetPointer<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterPointerCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}

internal unsafe struct IterPointerCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IIterInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, void> invoke = (delegate*<Iter, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, void>)callback;
        invoke(it, it.GetPointer<T0>(0), it.GetPointer<T1>(1), it.GetPointer<T2>(2), it.GetPointer<T3>(3), it.GetPointer<T4>(4), it.GetPointer<T5>(5), it.GetPointer<T6>(6), it.GetPointer<T7>(7), it.GetPointer<T8>(8), it.GetPointer<T9>(9), it.GetPointer<T10>(10), it.GetPointer<T11>(11));
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, _, _, _, _>.Iter<WorkerIterable, IterPointerCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>(ref state.Worker, state.Callback);
    }
}