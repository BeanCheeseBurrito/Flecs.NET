// /_/src/Flecs.NET/Generated/Invoker/Find/T15.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;
using Flecs.NET.Utilities;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct FindRefCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindEntityRefCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i]), ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterRefCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i, ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindRefCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool> invoke = (delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindEntityRefCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool> invoke = (delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i]), ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterRefCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool> invoke = (delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, ref T14, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i, ref Managed.GetTypeRef<T0>(TFieldGetter.Get<T0>(in fields, 0, i)), ref Managed.GetTypeRef<T1>(TFieldGetter.Get<T1>(in fields, 1, i)), ref Managed.GetTypeRef<T2>(TFieldGetter.Get<T2>(in fields, 2, i)), ref Managed.GetTypeRef<T3>(TFieldGetter.Get<T3>(in fields, 3, i)), ref Managed.GetTypeRef<T4>(TFieldGetter.Get<T4>(in fields, 4, i)), ref Managed.GetTypeRef<T5>(TFieldGetter.Get<T5>(in fields, 5, i)), ref Managed.GetTypeRef<T6>(TFieldGetter.Get<T6>(in fields, 6, i)), ref Managed.GetTypeRef<T7>(TFieldGetter.Get<T7>(in fields, 7, i)), ref Managed.GetTypeRef<T8>(TFieldGetter.Get<T8>(in fields, 8, i)), ref Managed.GetTypeRef<T9>(TFieldGetter.Get<T9>(in fields, 9, i)), ref Managed.GetTypeRef<T10>(TFieldGetter.Get<T10>(in fields, 10, i)), ref Managed.GetTypeRef<T11>(TFieldGetter.Get<T11>(in fields, 11, i)), ref Managed.GetTypeRef<T12>(TFieldGetter.Get<T12>(in fields, 12, i)), ref Managed.GetTypeRef<T13>(TFieldGetter.Get<T13>(in fields, 13, i)), ref Managed.GetTypeRef<T14>(TFieldGetter.Get<T14>(in fields, 14, i))))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindPointerCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindEntityPointerCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i]), TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterPointerCallbackDelegate<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> invoke = (Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i, TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindPointerCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool> invoke = (delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindEntityPointerCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool> invoke = (delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i]), TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterPointerCallbackPointer<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool> invoke = (delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, T14*, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i, TFieldGetter.Get<T0>(in fields, 0, i), TFieldGetter.Get<T1>(in fields, 1, i), TFieldGetter.Get<T2>(in fields, 2, i), TFieldGetter.Get<T3>(in fields, 3, i), TFieldGetter.Get<T4>(in fields, 4, i), TFieldGetter.Get<T5>(in fields, 5, i), TFieldGetter.Get<T6>(in fields, 6, i), TFieldGetter.Get<T7>(in fields, 7, i), TFieldGetter.Get<T8>(in fields, 8, i), TFieldGetter.Get<T9>(in fields, 9, i), TFieldGetter.Get<T10>(in fields, 10, i), TFieldGetter.Get<T11>(in fields, 11, i), TFieldGetter.Get<T12>(in fields, 12, i), TFieldGetter.Get<T13>(in fields, 13, i), TFieldGetter.Get<T14>(in fields, 14, i)))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}