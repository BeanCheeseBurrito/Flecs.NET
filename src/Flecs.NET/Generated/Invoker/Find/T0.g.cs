// /_/src/Flecs.NET/Generated/Invoker/Find/T0.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;
using Flecs.NET.Utilities;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct FindEntityCallbackDelegate : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindEntityCallback invoke = (Ecs.FindEntityCallback)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i])))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindEntityCallbackPointer : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Entity, bool> invoke = (delegate*<Entity, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(new Entity(fields.Iter->world, fields.Iter->entities[i])))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterCallbackDelegate : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        Ecs.FindIterCallback invoke = (Ecs.FindIterCallback)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}

internal unsafe struct FindIterCallbackPointer : IFindInvoker
{
    public static Entity Invoke<TFieldGetter>(in Fields fields, int count, InvokerCallback callback) where TFieldGetter : IFieldGetter
    {
        delegate*<Iter, int, bool> invoke = (delegate*<Iter, int, bool>)callback;
        
        for (int i = 0; i < count; i++)
        {
            if (invoke(fields.Iter, i))
                return new Entity(fields.Iter->world, fields.Iter->entities[i]);
        }
        
        return default;
    }
}