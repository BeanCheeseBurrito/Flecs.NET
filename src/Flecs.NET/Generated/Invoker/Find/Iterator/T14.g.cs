// /_/src/Flecs.NET/Generated/Invoker/Find/Iterator/T14.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;
using System.Runtime.CompilerServices;
using Flecs.NET.Utilities;
using static Flecs.NET.Bindings.flecs;

namespace Flecs.NET.Core;

public static unsafe partial class Invoker
{
    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count; Ecs.Assert(it.Handle->entities != null, "No entities returned, use Iter() or Each() without the entity argument instead.");
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindEntityRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindIterRefCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback)
    {
        int count = it.Handle->count; Ecs.Assert(it.Handle->entities != null, "No entities returned, use Iter() or Each() without the entity argument instead.");
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<Entity, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefUnmanaged(i), ref field1.RefUnmanaged(i), ref field2.RefUnmanaged(i), ref field3.RefUnmanaged(i), ref field4.RefUnmanaged(i), ref field5.RefUnmanaged(i), ref field6.RefUnmanaged(i), ref field7.RefUnmanaged(i), ref field8.RefUnmanaged(i), ref field9.RefUnmanaged(i), ref field10.RefUnmanaged(i), ref field11.RefUnmanaged(i), ref field12.RefUnmanaged(i), ref field13.RefUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSharedUnmanaged(i), ref field1.RefSharedUnmanaged(i), ref field2.RefSharedUnmanaged(i), ref field3.RefSharedUnmanaged(i), ref field4.RefSharedUnmanaged(i), ref field5.RefSharedUnmanaged(i), ref field6.RefSharedUnmanaged(i), ref field7.RefSharedUnmanaged(i), ref field8.RefSharedUnmanaged(i), ref field9.RefSharedUnmanaged(i), ref field10.RefSharedUnmanaged(i), ref field11.RefSharedUnmanaged(i), ref field12.RefSharedUnmanaged(i), ref field13.RefSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseUnmanaged(i), ref field1.RefSparseUnmanaged(i), ref field2.RefSparseUnmanaged(i), ref field3.RefSparseUnmanaged(i), ref field4.RefSparseUnmanaged(i), ref field5.RefSparseUnmanaged(i), ref field6.RefSparseUnmanaged(i), ref field7.RefSparseUnmanaged(i), ref field8.RefSparseUnmanaged(i), ref field9.RefSparseUnmanaged(i), ref field10.RefSparseUnmanaged(i), ref field11.RefSparseUnmanaged(i), ref field12.RefSparseUnmanaged(i), ref field13.RefSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseSharedUnmanaged(i), ref field1.RefSparseSharedUnmanaged(i), ref field2.RefSparseSharedUnmanaged(i), ref field3.RefSparseSharedUnmanaged(i), ref field4.RefSparseSharedUnmanaged(i), ref field5.RefSparseSharedUnmanaged(i), ref field6.RefSparseSharedUnmanaged(i), ref field7.RefSparseSharedUnmanaged(i), ref field8.RefSparseSharedUnmanaged(i), ref field9.RefSparseSharedUnmanaged(i), ref field10.RefSparseSharedUnmanaged(i), ref field11.RefSparseSharedUnmanaged(i), ref field12.RefSparseSharedUnmanaged(i), ref field13.RefSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefManaged(i), ref field1.RefManaged(i), ref field2.RefManaged(i), ref field3.RefManaged(i), ref field4.RefManaged(i), ref field5.RefManaged(i), ref field6.RefManaged(i), ref field7.RefManaged(i), ref field8.RefManaged(i), ref field9.RefManaged(i), ref field10.RefManaged(i), ref field11.RefManaged(i), ref field12.RefManaged(i), ref field13.RefManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSharedManaged(i), ref field1.RefSharedManaged(i), ref field2.RefSharedManaged(i), ref field3.RefSharedManaged(i), ref field4.RefSharedManaged(i), ref field5.RefSharedManaged(i), ref field6.RefSharedManaged(i), ref field7.RefSharedManaged(i), ref field8.RefSharedManaged(i), ref field9.RefSharedManaged(i), ref field10.RefSharedManaged(i), ref field11.RefSharedManaged(i), ref field12.RefSharedManaged(i), ref field13.RefSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseManaged(i), ref field1.RefSparseManaged(i), ref field2.RefSparseManaged(i), ref field3.RefSparseManaged(i), ref field4.RefSparseManaged(i), ref field5.RefSparseManaged(i), ref field6.RefSparseManaged(i), ref field7.RefSparseManaged(i), ref field8.RefSparseManaged(i), ref field9.RefSparseManaged(i), ref field10.RefSparseManaged(i), ref field11.RefSparseManaged(i), ref field12.RefSparseManaged(i), ref field13.RefSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<Iter, int, ref T0, ref T1, ref T2, ref T3, ref T4, ref T5, ref T6, ref T7, ref T8, ref T9, ref T10, ref T11, ref T12, ref T13, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, ref field0.RefSparseSharedManaged(i), ref field1.RefSparseSharedManaged(i), ref field2.RefSparseSharedManaged(i), ref field3.RefSparseSharedManaged(i), ref field4.RefSparseSharedManaged(i), ref field5.RefSparseSharedManaged(i), ref field6.RefSparseSharedManaged(i), ref field7.RefSparseSharedManaged(i), ref field8.RefSparseSharedManaged(i), ref field9.RefSparseSharedManaged(i), ref field10.RefSparseSharedManaged(i), ref field11.RefSparseSharedManaged(i), ref field12.RefSparseSharedManaged(i), ref field13.RefSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count; Ecs.Assert(it.Handle->entities != null, "No entities returned, use Iter() or Each() without the entity argument instead.");
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindEntityPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, Ecs.FindIterPointerCallback<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback)
    {
        int count = it.Handle->count; Ecs.Assert(it.Handle->entities != null, "No entities returned, use Iter() or Each() without the entity argument instead.");
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<Entity, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(new Entity(it.Handle->world, it.Handle->entities[i]), field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }

    /// <summary>
    ///     Iterates over an Iter object using the provided .Find callback.
    /// </summary>
    /// <param name="it">The iter object.</param>
    /// <param name="callback">The callback.</param>
    /// <typeparam name="T0">The T0 component type.</typeparam> <typeparam name="T1">The T1 component type.</typeparam> <typeparam name="T2">The T2 component type.</typeparam> <typeparam name="T3">The T3 component type.</typeparam> <typeparam name="T4">The T4 component type.</typeparam> <typeparam name="T5">The T5 component type.</typeparam> <typeparam name="T6">The T6 component type.</typeparam> <typeparam name="T7">The T7 component type.</typeparam> <typeparam name="T8">The T8 component type.</typeparam> <typeparam name="T9">The T9 component type.</typeparam> <typeparam name="T10">The T10 component type.</typeparam> <typeparam name="T11">The T11 component type.</typeparam> <typeparam name="T12">The T12 component type.</typeparam> <typeparam name="T13">The T13 component type.</typeparam>
    public static Entity Find<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Iter it, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback)
    {
        int count = it.Handle->count == 0 && it.Handle->table == null ? 1 : it.Handle->count;
        
        FieldData<T0> field0 = it.GetFieldData<T0>(0); FieldData<T1> field1 = it.GetFieldData<T1>(1); FieldData<T2> field2 = it.GetFieldData<T2>(2); FieldData<T3> field3 = it.GetFieldData<T3>(3); FieldData<T4> field4 = it.GetFieldData<T4>(4); FieldData<T5> field5 = it.GetFieldData<T5>(5); FieldData<T6> field6 = it.GetFieldData<T6>(6); FieldData<T7> field7 = it.GetFieldData<T7>(7); FieldData<T8> field8 = it.GetFieldData<T8>(8); FieldData<T9> field9 = it.GetFieldData<T9>(9); FieldData<T10> field10 = it.GetFieldData<T10>(10); FieldData<T11> field11 = it.GetFieldData<T11>(11); FieldData<T12> field12 = it.GetFieldData<T12>(12); FieldData<T13> field13 = it.GetFieldData<T13>(13);
        IterationTechnique flags = it.GetIterationTechnique(14);
            
        Ecs.TableLock(it);
        
        Entity result = default;
        
        if (RuntimeHelpers.IsReferenceOrContainsReferences<T0>() || RuntimeHelpers.IsReferenceOrContainsReferences<T1>() || RuntimeHelpers.IsReferenceOrContainsReferences<T2>() || RuntimeHelpers.IsReferenceOrContainsReferences<T3>() || RuntimeHelpers.IsReferenceOrContainsReferences<T4>() || RuntimeHelpers.IsReferenceOrContainsReferences<T5>() || RuntimeHelpers.IsReferenceOrContainsReferences<T6>() || RuntimeHelpers.IsReferenceOrContainsReferences<T7>() || RuntimeHelpers.IsReferenceOrContainsReferences<T8>() || RuntimeHelpers.IsReferenceOrContainsReferences<T9>() || RuntimeHelpers.IsReferenceOrContainsReferences<T10>() || RuntimeHelpers.IsReferenceOrContainsReferences<T11>() || RuntimeHelpers.IsReferenceOrContainsReferences<T12>() || RuntimeHelpers.IsReferenceOrContainsReferences<T13>())
        {
            if (flags == IterationTechnique.None)
                result = Managed(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedManaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
        else
        {
           if (flags == IterationTechnique.None)
                result = Unmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Shared)
                result = SharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == IterationTechnique.Sparse)
                result = SparseUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
            else if (flags == (IterationTechnique.Sparse | IterationTechnique.Shared))
                result = SparseSharedUnmanaged(it, count, callback, ref field0, ref field1, ref field2, ref field3, ref field4, ref field5, ref field6, ref field7, ref field8, ref field9, ref field10, ref field11, ref field12, ref field13);
        }
            
        Ecs.TableUnlock(it);
        
        return result;
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Unmanaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerUnmanaged(i), field1.PointerUnmanaged(i), field2.PointerUnmanaged(i), field3.PointerUnmanaged(i), field4.PointerUnmanaged(i), field5.PointerUnmanaged(i), field6.PointerUnmanaged(i), field7.PointerUnmanaged(i), field8.PointerUnmanaged(i), field9.PointerUnmanaged(i), field10.PointerUnmanaged(i), field11.PointerUnmanaged(i), field12.PointerUnmanaged(i), field13.PointerUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedUnmanaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSharedUnmanaged(i), field1.PointerSharedUnmanaged(i), field2.PointerSharedUnmanaged(i), field3.PointerSharedUnmanaged(i), field4.PointerSharedUnmanaged(i), field5.PointerSharedUnmanaged(i), field6.PointerSharedUnmanaged(i), field7.PointerSharedUnmanaged(i), field8.PointerSharedUnmanaged(i), field9.PointerSharedUnmanaged(i), field10.PointerSharedUnmanaged(i), field11.PointerSharedUnmanaged(i), field12.PointerSharedUnmanaged(i), field13.PointerSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseUnmanaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseUnmanaged(i), field1.PointerSparseUnmanaged(i), field2.PointerSparseUnmanaged(i), field3.PointerSparseUnmanaged(i), field4.PointerSparseUnmanaged(i), field5.PointerSparseUnmanaged(i), field6.PointerSparseUnmanaged(i), field7.PointerSparseUnmanaged(i), field8.PointerSparseUnmanaged(i), field9.PointerSparseUnmanaged(i), field10.PointerSparseUnmanaged(i), field11.PointerSparseUnmanaged(i), field12.PointerSparseUnmanaged(i), field13.PointerSparseUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedUnmanaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseSharedUnmanaged(i), field1.PointerSparseSharedUnmanaged(i), field2.PointerSparseSharedUnmanaged(i), field3.PointerSparseSharedUnmanaged(i), field4.PointerSparseSharedUnmanaged(i), field5.PointerSparseSharedUnmanaged(i), field6.PointerSparseSharedUnmanaged(i), field7.PointerSparseSharedUnmanaged(i), field8.PointerSparseSharedUnmanaged(i), field9.PointerSparseSharedUnmanaged(i), field10.PointerSparseSharedUnmanaged(i), field11.PointerSparseSharedUnmanaged(i), field12.PointerSparseSharedUnmanaged(i), field13.PointerSparseSharedUnmanaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity Managed(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerManaged(i), field1.PointerManaged(i), field2.PointerManaged(i), field3.PointerManaged(i), field4.PointerManaged(i), field5.PointerManaged(i), field6.PointerManaged(i), field7.PointerManaged(i), field8.PointerManaged(i), field9.PointerManaged(i), field10.PointerManaged(i), field11.PointerManaged(i), field12.PointerManaged(i), field13.PointerManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SharedManaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSharedManaged(i), field1.PointerSharedManaged(i), field2.PointerSharedManaged(i), field3.PointerSharedManaged(i), field4.PointerSharedManaged(i), field5.PointerSharedManaged(i), field6.PointerSharedManaged(i), field7.PointerSharedManaged(i), field8.PointerSharedManaged(i), field9.PointerSharedManaged(i), field10.PointerSharedManaged(i), field11.PointerSharedManaged(i), field12.PointerSharedManaged(i), field13.PointerSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseManaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseManaged(i), field1.PointerSparseManaged(i), field2.PointerSparseManaged(i), field3.PointerSparseManaged(i), field4.PointerSparseManaged(i), field5.PointerSparseManaged(i), field6.PointerSparseManaged(i), field7.PointerSparseManaged(i), field8.PointerSparseManaged(i), field9.PointerSparseManaged(i), field10.PointerSparseManaged(i), field11.PointerSparseManaged(i), field12.PointerSparseManaged(i), field13.PointerSparseManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static Entity SparseSharedManaged(Iter it, int count, delegate*<Iter, int, T0*, T1*, T2*, T3*, T4*, T5*, T6*, T7*, T8*, T9*, T10*, T11*, T12*, T13*, bool> callback, ref FieldData<T0> field0, ref FieldData<T1> field1, ref FieldData<T2> field2, ref FieldData<T3> field3, ref FieldData<T4> field4, ref FieldData<T5> field5, ref FieldData<T6> field6, ref FieldData<T7> field7, ref FieldData<T8> field8, ref FieldData<T9> field9, ref FieldData<T10> field10, ref FieldData<T11> field11, ref FieldData<T12> field12, ref FieldData<T13> field13)
        {
            for (int i = 0; i < count; i++)
            {
                if (callback(it, i, field0.PointerSparseSharedManaged(i), field1.PointerSparseSharedManaged(i), field2.PointerSparseSharedManaged(i), field3.PointerSparseSharedManaged(i), field4.PointerSparseSharedManaged(i), field5.PointerSparseSharedManaged(i), field6.PointerSparseSharedManaged(i), field7.PointerSparseSharedManaged(i), field8.PointerSparseSharedManaged(i), field9.PointerSparseSharedManaged(i), field10.PointerSparseSharedManaged(i), field11.PointerSparseSharedManaged(i), field12.PointerSparseSharedManaged(i), field13.PointerSparseSharedManaged(i)))
                    return new Entity(it.Handle->world, it.Handle->entities[i]);
            }
                
            return default;
        }
    }
}