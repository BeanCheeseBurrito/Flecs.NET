// /_/src/Flecs.NET/Generated/Invoker/Observe/T0.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct ObserveCallbackDelegate : IObserveInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.ObserveCallback invoke = (Ecs.ObserveCallback)callback;
        invoke();
    }
}

internal unsafe struct ObserveCallbackPointer : IObserveInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<void> invoke = (delegate*<void>)callback;
        invoke();
    }
}

internal unsafe struct ObserveEntityCallbackDelegate : IObserveInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.ObserveEntityCallback invoke = (Ecs.ObserveEntityCallback)callback;
        invoke(new Entity(it.Handle->world, it.Handle->sources[0]));
    }
}

internal unsafe struct ObserveEntityCallbackPointer : IObserveInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Entity, void> invoke = (delegate*<Entity, void>)callback;
        invoke(new Entity(it.Handle->world, it.Handle->sources[0]));
    }
}