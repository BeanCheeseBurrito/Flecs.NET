// /_/src/Flecs.NET/Generated/Invoker/Run/T0.g.cs
// File was auto-generated by /_/src/Flecs.NET.Codegen/Generators/Invoker.cs
using System;

namespace Flecs.NET.Core.Invokers;

internal unsafe struct RunCallbackDelegate : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.RunCallback invoke = (Ecs.RunCallback)callback;
        invoke(it);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunCallbackDelegate>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}

internal unsafe struct RunCallbackPointer : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, void> invoke = (delegate*<Iter, void>)callback;
        invoke(it);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunCallbackPointer>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}

internal unsafe struct RunDelegateCallbackDelegate : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.RunDelegateCallback invoke = (Ecs.RunDelegateCallback)callback;
        invoke(it, Callback);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunDelegateCallbackDelegate>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}

internal unsafe struct RunDelegateCallbackPointer : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, Action<Iter>, void> invoke = (delegate*<Iter, Action<Iter>, void>)callback;
        invoke(it, Callback);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunDelegateCallbackPointer>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}

internal unsafe struct RunPointerCallbackDelegate : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        Ecs.RunPointerCallback invoke = (Ecs.RunPointerCallback)callback;
        invoke(it, &Callback);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunPointerCallbackDelegate>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}

internal unsafe struct RunPointerCallbackPointer : IRunInvoker
{
    public static void Invoke(Iter it, InvokerCallback callback)
    {
        delegate*<Iter, delegate*<Iter, void>, void> invoke = (delegate*<Iter, delegate*<Iter, void>, void>)callback;
        invoke(it, &Callback);
    }
    
    public static void Invoke(JobState state)
    {
        Invoker<_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _>.Run<WorkerIterable, RunPointerCallbackPointer>(ref state.Worker, state.Callback);
    }
    
    public static void Callback(Iter it)
    {
        it.Callback();
    }
}