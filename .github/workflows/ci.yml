name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      push-packages:
        description: 'Push nuget packages'
        required: true
        default: 'false'
        type: boolean

      use-auto-generated-version:
        description: 'Use auto-generated version'
        required: true
        default: 'true'
        type: boolean

      nuget-registry:
        description: 'NuGet registry'
        required: true
        default: 'GitLab'
        type: choice
        options:
          - GitLab
          - NuGet

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          5.0.x
          6.0.x
          7.0.x

    - name: Set Version Suffix
      shell: bash
      run: |
        if [ '${{ github.event.inputs.use-auto-generated-version }}' != 'false' ]; then
          echo "FlecsVersionSuffix=-build-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
        fi

    - name: Restore Dependencies
      shell: bash
      run: dotnet restore

    - name: Generate Bindings
      shell: bash
      run: dotnet run --project src/Flecs.NET.Bindgen

    - name: Build Native Libraries
      shell: bash
      run: dotnet build src/Flecs.NET.Native

    - name: Run Tests
      shell: bash
      run: dotnet test --verbosity minimal

    - name: Pack Nuget Packages
      shell: bash
      run: |
        dotnet pack /p:FlecsVersionSuffix=$FlecsVersionSuffix /p:ContinuousIntegrationBuild=true -c Debug
        dotnet pack /p:FlecsVersionSuffix=$FlecsVersionSuffix /p:ContinuousIntegrationBuild=true -c Release

    - name: Push NuGet Packages Temp Test
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: dotnet nuget push src/**/*.nupkg --api-key $GITLAB_ACCESS_TOKEN --source https://raw.githubusercontent.com/BeanCheeseBurrito/Flecs.NET/gitlab-nuget-package-actions/nuget/index.json

    - name: Upload Artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Nuget Packages
        path: |
          src/**/*.nupkg
          src/**/*.snupkg

    - name: Push NuGet Packages
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'workflow_dispatch' && github.event.inputs.push-packages == 'true'
      shell: bash
      run: |
        if [ '${{ github.event.inputs.nuget-registry }}' == 'GitLab' ]; then
          dotnet nuget push src/**/*.nupkg --api-key $GITLAB_ACCESS_TOKEN --source https://raw.githubusercontent.com/BeanCheeseBurrito/Flecs.NET/gitlab-nuget-package-actions/nuget/index.json
        elif [ '${{ github.event.inputs.nuget-registry }}' == 'NuGet' ]; then
          dotnet nuget push src/**/*.nupkg --api-key $NUGET_ACCESS_TOKEN --source https://api.nuget.org/v3/index.json
        fi
